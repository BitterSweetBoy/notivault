// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String?
  email     String?  @unique
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  sessions  Session[]
}

model Session {
  id               String    @id @default(uuid())
  userId           String
  user             User      @relation(fields: [userId], references: [id])
  sessionKey       String    @unique @default("")
  ticketData       String    @default("{}")      
  createdAt        DateTime  @default(now())
  lastActivity     DateTime  @default(now())
  expiresAt        DateTime
  isSessionExpired Boolean   @default(false)
  logoutAt         DateTime?
  revokedByAdmin   Boolean   @default(false)
  ipAddress        String?
  userAgent        String?
}

model LoginAttempt {
  id         String   @id @default(uuid())
  email      String
  ipAddress  String?
  userAgent  String?
  timestamp  DateTime @default(now())
  success    Boolean
}

model IntegrationService {
  id          String     @id @default(uuid())
  nombre      String     @unique
  descripcion String?
  icono       String?
  tokens      ApiToken[]
}

model ApiToken {
  id                 String              @id @default(uuid())
  integrationServiceId String
  integrationService IntegrationService @relation(fields: [integrationServiceId], references: [id])
  descripcion        String
  estado             TokenEstado  
  ultimaModificacion DateTime
  fechaConfiguracion DateTime
  ultimaVerificacion DateTime
  apiKey             String
  serverUrl          String?
  activo                 Boolean             @default(true)
}

enum TokenEstado {
  conectado
  desconectado
}
